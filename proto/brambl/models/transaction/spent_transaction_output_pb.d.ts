// @generated by protoc-gen-es v1.8.0
// @generated from file brambl/models/transaction/spent_transaction_output.proto (package co.topl.brambl.models.transaction, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { TransactionOutputAddress } from "../address_pb.js";
import type { Attestation } from "../box/attestation_pb.js";
import type { Value } from "../box/value_pb.js";

/**
 * Input to a transaction
 *
 * @generated from message co.topl.brambl.models.transaction.SpentTransactionOutput
 */
export declare class SpentTransactionOutput extends Message<SpentTransactionOutput> {
  /**
   * @generated from field: co.topl.brambl.models.TransactionOutputAddress address = 1;
   */
  address?: TransactionOutputAddress;

  /**
   * @generated from field: co.topl.brambl.models.box.Attestation attestation = 2;
   */
  attestation?: Attestation;

  /**
   * the value of the box being spent
   *
   * @generated from field: co.topl.brambl.models.box.Value value = 3;
   */
  value?: Value;

  constructor(data?: PartialMessage<SpentTransactionOutput>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.brambl.models.transaction.SpentTransactionOutput";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpentTransactionOutput;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpentTransactionOutput;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpentTransactionOutput;

  static equals(a: SpentTransactionOutput | PlainMessage<SpentTransactionOutput> | undefined, b: SpentTransactionOutput | PlainMessage<SpentTransactionOutput> | undefined): boolean;
}


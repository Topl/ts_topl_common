// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file brambl/models/transaction/unspent_transaction_output.proto (package co.topl.brambl.models.transaction, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { LockAddress } from "../address_pb.js";
import { Value } from "../box/value_pb.js";

/**
 * output of a transaction
 *
 * @generated from message co.topl.brambl.models.transaction.UnspentTransactionOutput
 */
export class UnspentTransactionOutput extends Message<UnspentTransactionOutput> {
  /**
   * @generated from field: co.topl.brambl.models.LockAddress address = 1;
   */
  address?: LockAddress;

  /**
   * @generated from field: co.topl.brambl.models.box.Value value = 2;
   */
  value?: Value;

  constructor(data?: PartialMessage<UnspentTransactionOutput>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "co.topl.brambl.models.transaction.UnspentTransactionOutput";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "message", T: LockAddress },
    { no: 2, name: "value", kind: "message", T: Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnspentTransactionOutput {
    return new UnspentTransactionOutput().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnspentTransactionOutput {
    return new UnspentTransactionOutput().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnspentTransactionOutput {
    return new UnspentTransactionOutput().fromJsonString(jsonString, options);
  }

  static equals(a: UnspentTransactionOutput | PlainMessage<UnspentTransactionOutput> | undefined, b: UnspentTransactionOutput | PlainMessage<UnspentTransactionOutput> | undefined): boolean {
    return proto3.util.equals(UnspentTransactionOutput, a, b);
  }
}


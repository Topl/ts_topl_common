// @generated by protoc-gen-es v1.8.0
// @generated from file brambl/models/box/box.proto (package co.topl.brambl.models.box, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Lock } from "./lock_pb.js";
import type { Value } from "./value_pb.js";

/**
 * encapsulates a value and lock that is needed to be satisfied in order to unlock value
 *
 * @generated from message co.topl.brambl.models.box.Box
 */
export declare class Box extends Message<Box> {
  /**
   * @generated from field: co.topl.brambl.models.box.Lock lock = 1;
   */
  lock?: Lock;

  /**
   * @generated from field: co.topl.brambl.models.box.Value value = 2;
   */
  value?: Value;

  constructor(data?: PartialMessage<Box>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.brambl.models.box.Box";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Box;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Box;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Box;

  static equals(a: Box | PlainMessage<Box> | undefined, b: Box | PlainMessage<Box> | undefined): boolean;
}


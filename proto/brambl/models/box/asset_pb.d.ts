// @generated by protoc-gen-es v1.8.0
// @generated from file brambl/models/box/asset.proto (package co.topl.brambl.models.box, syntax proto3)
/* eslint-disable */
// @ts-nocheck

/**
 * @generated from enum co.topl.brambl.models.box.FungibilityType
 */
export declare enum FungibilityType {
  /**
   * `group-and-series` means that both the series and the group are considered for fungibility.
   *
   * @generated from enum value: GROUP_AND_SERIES = 0;
   */
  GROUP_AND_SERIES = 0,

  /**
   * `series` means that only the series is considered for fungibility.
   *
   * @generated from enum value: SERIES = 1;
   */
  SERIES = 1,

  /**
   * `group` means that only the group is considered for fungibility
   *
   * @generated from enum value: GROUP = 2;
   */
  GROUP = 2,
}

/**
 * @generated from enum co.topl.brambl.models.box.QuantityDescriptorType
 */
export declare enum QuantityDescriptorType {
  /**
   * `liquid` If it is fungible one can fraction it in smaller tokens or merge two smaller tokens to make a bigger one.
   *
   * @generated from enum value: LIQUID = 0;
   */
  LIQUID = 0,

  /**
   * `accumulator` means that the token can only be merged with other fungible tokens. Once two tokens are merged they can never be separated and will always share the same UTXO.
   *
   * @generated from enum value: ACCUMULATOR = 1;
   */
  ACCUMULATOR = 1,

  /**
   * `fractionable` means that the token can only be split but not merged with other fungible tokens. Once the token was split it can never be put together again.
   *
   * @generated from enum value: FRACTIONABLE = 2;
   */
  FRACTIONABLE = 2,

  /**
   * `immutable` means that a token can neither be accumulated nor split, it always keeps the same quantity.
   *
   * @generated from enum value: IMMUTABLE = 3;
   */
  IMMUTABLE = 3,
}


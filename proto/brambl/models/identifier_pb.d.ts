// @generated by protoc-gen-es v1.8.0
// @generated from file brambl/models/identifier.proto (package co.topl.brambl.models, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Represents the identifier of a Transaction.  It is constructed from the evidence of the signable bytes of the Transaction.
 *
 * @generated from message co.topl.brambl.models.TransactionId
 */
export declare class TransactionId extends Message<TransactionId> {
  /**
   * The evidence of the Transaction's signable bytes
   * length = 32
   *
   * @generated from field: bytes value = 1;
   */
  value: Uint8Array;

  constructor(data?: PartialMessage<TransactionId>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.brambl.models.TransactionId";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransactionId;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransactionId;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransactionId;

  static equals(a: TransactionId | PlainMessage<TransactionId> | undefined, b: TransactionId | PlainMessage<TransactionId> | undefined): boolean;
}

/**
 * Represents the identifier of a Lock.  It is constructed from the evidence of the signable bytes of the Lock.
 *
 * @generated from message co.topl.brambl.models.LockId
 */
export declare class LockId extends Message<LockId> {
  /**
   * The evidence of the Lock's signable bytes
   * length = 32
   *
   * @generated from field: bytes value = 1;
   */
  value: Uint8Array;

  constructor(data?: PartialMessage<LockId>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.brambl.models.LockId";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LockId;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LockId;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LockId;

  static equals(a: LockId | PlainMessage<LockId> | undefined, b: LockId | PlainMessage<LockId> | undefined): boolean;
}

/**
 * Represents the identifier of an Accumulator Root.  It is constructed from the evidence of the signable bytes of the Lock.
 *
 * @generated from message co.topl.brambl.models.AccumulatorRootId
 */
export declare class AccumulatorRootId extends Message<AccumulatorRootId> {
  /**
   * The evidence of the Accumulator Root's signable bytes
   * length = 32
   *
   * @generated from field: bytes value = 1;
   */
  value: Uint8Array;

  constructor(data?: PartialMessage<AccumulatorRootId>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.brambl.models.AccumulatorRootId";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccumulatorRootId;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccumulatorRootId;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccumulatorRootId;

  static equals(a: AccumulatorRootId | PlainMessage<AccumulatorRootId> | undefined, b: AccumulatorRootId | PlainMessage<AccumulatorRootId> | undefined): boolean;
}

/**
 * Represents the identifier of an TAM V2 group.
 * It is constructed using SHA-256 digest from fields label+fixedSeries+seriesTokenSupply+transactionId+utxoIndex.
 *
 * @generated from message co.topl.brambl.models.GroupId
 */
export declare class GroupId extends Message<GroupId> {
  /**
   * The evidence of the Group signable bytes
   * length = 32
   *
   * @generated from field: bytes value = 1;
   */
  value: Uint8Array;

  constructor(data?: PartialMessage<GroupId>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.brambl.models.GroupId";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GroupId;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GroupId;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GroupId;

  static equals(a: GroupId | PlainMessage<GroupId> | undefined, b: GroupId | PlainMessage<GroupId> | undefined): boolean;
}

/**
 * Represents the identifier of an TAM V2 series.
 * It is constructed using SHA-256 digest from fields label+fixedSeries+seriesTokenSupply+transactionId+utxoIndex.
 *
 * @generated from message co.topl.brambl.models.SeriesId
 */
export declare class SeriesId extends Message<SeriesId> {
  /**
   * The evidence of the Group signable bytes
   * length = 32
   *
   * @generated from field: bytes value = 1;
   */
  value: Uint8Array;

  constructor(data?: PartialMessage<SeriesId>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.brambl.models.SeriesId";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SeriesId;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SeriesId;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SeriesId;

  static equals(a: SeriesId | PlainMessage<SeriesId> | undefined, b: SeriesId | PlainMessage<SeriesId> | undefined): boolean;
}


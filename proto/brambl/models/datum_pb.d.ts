// @generated by protoc-gen-es v1.8.0
// @generated from file brambl/models/datum.proto (package co.topl.brambl.models, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Event_Eon, Event_Epoch, Event_Era, Event_GroupPolicy, Event_Header, Event_IoTransaction, Event_SeriesPolicy } from "./event_pb.js";

/**
 * Datums represent a queryable product value of the arguments available from a certain Event. Datum may be
 * evaluated during the Quivr protocol execution by providing events as Datum in a Dynamic Context.
 *
 * @generated from message co.topl.brambl.models.Datum
 */
export declare class Datum extends Message<Datum> {
  /**
   * @generated from oneof co.topl.brambl.models.Datum.value
   */
  value: {
    /**
     * @generated from field: co.topl.brambl.models.Datum.Eon eon = 1;
     */
    value: Datum_Eon;
    case: "eon";
  } | {
    /**
     * @generated from field: co.topl.brambl.models.Datum.Era era = 2;
     */
    value: Datum_Era;
    case: "era";
  } | {
    /**
     * @generated from field: co.topl.brambl.models.Datum.Epoch epoch = 3;
     */
    value: Datum_Epoch;
    case: "epoch";
  } | {
    /**
     * @generated from field: co.topl.brambl.models.Datum.Header header = 4;
     */
    value: Datum_Header;
    case: "header";
  } | {
    /**
     * @generated from field: co.topl.brambl.models.Datum.IoTransaction ioTransaction = 5;
     */
    value: Datum_IoTransaction;
    case: "ioTransaction";
  } | {
    /**
     * @generated from field: co.topl.brambl.models.Datum.GroupPolicy groupPolicy = 6;
     */
    value: Datum_GroupPolicy;
    case: "groupPolicy";
  } | {
    /**
     * @generated from field: co.topl.brambl.models.Datum.SeriesPolicy seriesPolicy = 7;
     */
    value: Datum_SeriesPolicy;
    case: "seriesPolicy";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<Datum>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.brambl.models.Datum";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Datum;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Datum;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Datum;

  static equals(a: Datum | PlainMessage<Datum> | undefined, b: Datum | PlainMessage<Datum> | undefined): boolean;
}

/**
 * @generated from message co.topl.brambl.models.Datum.Eon
 */
export declare class Datum_Eon extends Message<Datum_Eon> {
  /**
   * @generated from field: co.topl.brambl.models.Event.Eon event = 1;
   */
  event?: Event_Eon;

  constructor(data?: PartialMessage<Datum_Eon>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.brambl.models.Datum.Eon";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Datum_Eon;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Datum_Eon;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Datum_Eon;

  static equals(a: Datum_Eon | PlainMessage<Datum_Eon> | undefined, b: Datum_Eon | PlainMessage<Datum_Eon> | undefined): boolean;
}

/**
 * @generated from message co.topl.brambl.models.Datum.Era
 */
export declare class Datum_Era extends Message<Datum_Era> {
  /**
   * @generated from field: co.topl.brambl.models.Event.Era event = 1;
   */
  event?: Event_Era;

  constructor(data?: PartialMessage<Datum_Era>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.brambl.models.Datum.Era";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Datum_Era;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Datum_Era;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Datum_Era;

  static equals(a: Datum_Era | PlainMessage<Datum_Era> | undefined, b: Datum_Era | PlainMessage<Datum_Era> | undefined): boolean;
}

/**
 * @generated from message co.topl.brambl.models.Datum.Epoch
 */
export declare class Datum_Epoch extends Message<Datum_Epoch> {
  /**
   * @generated from field: co.topl.brambl.models.Event.Epoch event = 1;
   */
  event?: Event_Epoch;

  constructor(data?: PartialMessage<Datum_Epoch>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.brambl.models.Datum.Epoch";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Datum_Epoch;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Datum_Epoch;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Datum_Epoch;

  static equals(a: Datum_Epoch | PlainMessage<Datum_Epoch> | undefined, b: Datum_Epoch | PlainMessage<Datum_Epoch> | undefined): boolean;
}

/**
 * @generated from message co.topl.brambl.models.Datum.Header
 */
export declare class Datum_Header extends Message<Datum_Header> {
  /**
   * @generated from field: co.topl.brambl.models.Event.Header event = 1;
   */
  event?: Event_Header;

  constructor(data?: PartialMessage<Datum_Header>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.brambl.models.Datum.Header";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Datum_Header;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Datum_Header;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Datum_Header;

  static equals(a: Datum_Header | PlainMessage<Datum_Header> | undefined, b: Datum_Header | PlainMessage<Datum_Header> | undefined): boolean;
}

/**
 * @generated from message co.topl.brambl.models.Datum.IoTransaction
 */
export declare class Datum_IoTransaction extends Message<Datum_IoTransaction> {
  /**
   * @generated from field: co.topl.brambl.models.Event.IoTransaction event = 1;
   */
  event?: Event_IoTransaction;

  constructor(data?: PartialMessage<Datum_IoTransaction>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.brambl.models.Datum.IoTransaction";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Datum_IoTransaction;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Datum_IoTransaction;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Datum_IoTransaction;

  static equals(a: Datum_IoTransaction | PlainMessage<Datum_IoTransaction> | undefined, b: Datum_IoTransaction | PlainMessage<Datum_IoTransaction> | undefined): boolean;
}

/**
 * @generated from message co.topl.brambl.models.Datum.GroupPolicy
 */
export declare class Datum_GroupPolicy extends Message<Datum_GroupPolicy> {
  /**
   * @generated from field: co.topl.brambl.models.Event.GroupPolicy event = 1;
   */
  event?: Event_GroupPolicy;

  constructor(data?: PartialMessage<Datum_GroupPolicy>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.brambl.models.Datum.GroupPolicy";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Datum_GroupPolicy;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Datum_GroupPolicy;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Datum_GroupPolicy;

  static equals(a: Datum_GroupPolicy | PlainMessage<Datum_GroupPolicy> | undefined, b: Datum_GroupPolicy | PlainMessage<Datum_GroupPolicy> | undefined): boolean;
}

/**
 * @generated from message co.topl.brambl.models.Datum.SeriesPolicy
 */
export declare class Datum_SeriesPolicy extends Message<Datum_SeriesPolicy> {
  /**
   * @generated from field: co.topl.brambl.models.Event.SeriesPolicy event = 1;
   */
  event?: Event_SeriesPolicy;

  constructor(data?: PartialMessage<Datum_SeriesPolicy>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.brambl.models.Datum.SeriesPolicy";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Datum_SeriesPolicy;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Datum_SeriesPolicy;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Datum_SeriesPolicy;

  static equals(a: Datum_SeriesPolicy | PlainMessage<Datum_SeriesPolicy> | undefined, b: Datum_SeriesPolicy | PlainMessage<Datum_SeriesPolicy> | undefined): boolean;
}


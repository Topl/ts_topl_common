// @generated by protoc-gen-es v1.8.0
// @generated from file consensus/models/operational_certificate.proto (package co.topl.consensus.models, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * A certificate which commits an operator to a linear key, which is then used to sign the block
 *
 * @generated from message co.topl.consensus.models.OperationalCertificate
 */
export const OperationalCertificate = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.consensus.models.OperationalCertificate",
  () => [
    { no: 1, name: "parentVK", kind: "message", T: VerificationKeyKesProduct },
    { no: 2, name: "parentSignature", kind: "message", T: SignatureKesProduct },
    { no: 3, name: "childVK", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "childSignature", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * @generated from message co.topl.consensus.models.VerificationKeyKesProduct
 */
export const VerificationKeyKesProduct = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.consensus.models.VerificationKeyKesProduct",
  () => [
    { no: 1, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "step", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message co.topl.consensus.models.SignatureKesSum
 */
export const SignatureKesSum = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.consensus.models.SignatureKesSum",
  () => [
    { no: 1, name: "verificationKey", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "signature", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "witness", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
  ],
);

/**
 * @generated from message co.topl.consensus.models.SignatureKesProduct
 */
export const SignatureKesProduct = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.consensus.models.SignatureKesProduct",
  () => [
    { no: 1, name: "superSignature", kind: "message", T: SignatureKesSum },
    { no: 2, name: "subSignature", kind: "message", T: SignatureKesSum },
    { no: 3, name: "subRoot", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);


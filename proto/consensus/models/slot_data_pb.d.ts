// @generated by protoc-gen-es v1.8.0
// @generated from file consensus/models/slot_data.proto (package co.topl.consensus.models, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { BlockId } from "./block_id_pb.js";

/**
 * Represents a "mini" block header, containing just a subset of its data needed to quickly inspect consensus characteristics of a block
 *
 * @generated from message co.topl.consensus.models.SlotData
 */
export declare class SlotData extends Message<SlotData> {
  /**
   * The slot ID corresponding to "this" block
   *
   * @generated from field: co.topl.consensus.models.SlotId slotId = 1;
   */
  slotId?: SlotId;

  /**
   * The slot ID corresponding to "this" block's parent
   *
   * @generated from field: co.topl.consensus.models.SlotId parentSlotId = 2;
   */
  parentSlotId?: SlotId;

  /**
   * The "rho" corresponding to "this" block
   * length = 64
   *
   * @generated from field: bytes rho = 3;
   */
  rho: Uint8Array;

  /**
   * The "eta" corresponding to "this" block
   * length = 32
   *
   * @generated from field: bytes eta = 4;
   */
  eta: Uint8Array;

  /**
   * The height of "this" block
   *
   * @generated from field: uint64 height = 5;
   */
  height: bigint;

  constructor(data?: PartialMessage<SlotData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.consensus.models.SlotData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SlotData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SlotData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SlotData;

  static equals(a: SlotData | PlainMessage<SlotData> | undefined, b: SlotData | PlainMessage<SlotData> | undefined): boolean;
}

/**
 * A glorified tuple
 *
 * @generated from message co.topl.consensus.models.SlotId
 */
export declare class SlotId extends Message<SlotId> {
  /**
   * The slot in which a block was created
   *
   * @generated from field: uint64 slot = 1;
   */
  slot: bigint;

  /**
   * The ID of the block
   *
   * @generated from field: co.topl.consensus.models.BlockId blockId = 2;
   */
  blockId?: BlockId;

  constructor(data?: PartialMessage<SlotId>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.consensus.models.SlotId";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SlotId;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SlotId;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SlotId;

  static equals(a: SlotId | PlainMessage<SlotId> | undefined, b: SlotId | PlainMessage<SlotId> | undefined): boolean;
}


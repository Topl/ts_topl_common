// @generated by protoc-gen-es v1.8.0
// @generated from file consensus/models/staking.proto (package co.topl.consensus.models, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { SignatureKesProduct } from "./operational_certificate_pb.js";
import { Int128 } from "../../quivr/models/shared_pb.js";

/**
 * A reference to a unique staker
 *
 * @generated from message co.topl.consensus.models.StakingAddress
 */
export const StakingAddress = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.consensus.models.StakingAddress",
  () => [
    { no: 1, name: "value", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * A proof-of-stake registration
 *
 * @generated from message co.topl.consensus.models.StakingRegistration
 */
export const StakingRegistration = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.consensus.models.StakingRegistration",
  () => [
    { no: 1, name: "address", kind: "message", T: StakingAddress },
    { no: 2, name: "signature", kind: "message", T: SignatureKesProduct },
  ],
);

/**
 * An active, registered participate in the consensus protocol, for a particular epoch.
 *
 * @generated from message co.topl.consensus.models.ActiveStaker
 */
export const ActiveStaker = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.consensus.models.ActiveStaker",
  () => [
    { no: 1, name: "registration", kind: "message", T: StakingRegistration },
    { no: 3, name: "quantity", kind: "message", T: Int128 },
  ],
);


// @generated by protoc-gen-es v1.8.0
// @generated from file node/models/p2p.proto (package co.topl.node.models, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Request type for CurrentKnownHosts
 *
 * @generated from message co.topl.node.models.CurrentKnownHostsReq
 */
export declare class CurrentKnownHostsReq extends Message<CurrentKnownHostsReq> {
  /**
   * @generated from field: uint32 maxCount = 1;
   */
  maxCount: number;

  constructor(data?: PartialMessage<CurrentKnownHostsReq>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.node.models.CurrentKnownHostsReq";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CurrentKnownHostsReq;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CurrentKnownHostsReq;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CurrentKnownHostsReq;

  static equals(a: CurrentKnownHostsReq | PlainMessage<CurrentKnownHostsReq> | undefined, b: CurrentKnownHostsReq | PlainMessage<CurrentKnownHostsReq> | undefined): boolean;
}

/**
 * @generated from message co.topl.node.models.KnownHost
 */
export declare class KnownHost extends Message<KnownHost> {
  /**
   * @generated from field: bytes id = 3;
   */
  id: Uint8Array;

  /**
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * @generated from field: uint32 port = 2;
   */
  port: number;

  constructor(data?: PartialMessage<KnownHost>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.node.models.KnownHost";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KnownHost;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KnownHost;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KnownHost;

  static equals(a: KnownHost | PlainMessage<KnownHost> | undefined, b: KnownHost | PlainMessage<KnownHost> | undefined): boolean;
}

/**
 * Response type for CurrentKnownHosts
 *
 * @generated from message co.topl.node.models.CurrentKnownHostsRes
 */
export declare class CurrentKnownHostsRes extends Message<CurrentKnownHostsRes> {
  /**
   * @generated from field: repeated co.topl.node.models.KnownHost hotHosts = 1;
   */
  hotHosts: KnownHost[];

  /**
   * @generated from field: repeated co.topl.node.models.KnownHost warmHosts = 2;
   */
  warmHosts: KnownHost[];

  /**
   * @generated from field: repeated co.topl.node.models.KnownHost coldHosts = 3;
   */
  coldHosts: KnownHost[];

  constructor(data?: PartialMessage<CurrentKnownHostsRes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.node.models.CurrentKnownHostsRes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CurrentKnownHostsRes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CurrentKnownHostsRes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CurrentKnownHostsRes;

  static equals(a: CurrentKnownHostsRes | PlainMessage<CurrentKnownHostsRes> | undefined, b: CurrentKnownHostsRes | PlainMessage<CurrentKnownHostsRes> | undefined): boolean;
}

/**
 * @generated from message co.topl.node.models.PingMessage
 */
export declare class PingMessage extends Message<PingMessage> {
  /**
   * @generated from field: string ping = 1;
   */
  ping: string;

  constructor(data?: PartialMessage<PingMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.node.models.PingMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PingMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PingMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PingMessage;

  static equals(a: PingMessage | PlainMessage<PingMessage> | undefined, b: PingMessage | PlainMessage<PingMessage> | undefined): boolean;
}

/**
 * @generated from message co.topl.node.models.PongMessage
 */
export declare class PongMessage extends Message<PongMessage> {
  /**
   * @generated from field: string pong = 1;
   */
  pong: string;

  constructor(data?: PartialMessage<PongMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.node.models.PongMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PongMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PongMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PongMessage;

  static equals(a: PongMessage | PlainMessage<PongMessage> | undefined, b: PongMessage | PlainMessage<PongMessage> | undefined): boolean;
}


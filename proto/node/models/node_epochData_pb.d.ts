// @generated by protoc-gen-es v1.8.0
// @generated from file node/models/node_epochData.proto (package co.topl.proto.node, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Int128 } from "../../quivr/models/shared_pb.js";

/**
 * Epoch data Contains, The "current" epoch is updated as node blocks are adopted over time
 *
 * @generated from message co.topl.proto.node.EpochData
 */
export declare class EpochData extends Message<EpochData> {
  /**
   * epoch
   *
   * @generated from field: uint64 epoch = 1;
   */
  epoch: bigint;

  /**
   * eon
   *
   * @generated from field: uint64 eon = 2;
   */
  eon: bigint;

  /**
   * era
   *
   * @generated from field: uint64 era = 3;
   */
  era: bigint;

  /**
   * Flag indicating if the epoch has been completed
   *
   * @generated from field: bool isComplete = 4;
   */
  isComplete: boolean;

  /**
   * The height of the first block in the epoch
   *
   * @generated from field: uint64 startHeight = 5;
   */
  startHeight: bigint;

  /**
   * The height of the last/latest block in the epoch
   *
   * @generated from field: uint64 endHeight = 6;
   */
  endHeight: bigint;

  /**
   * The first slot of the epoch
   *
   * @generated from field: uint64 startSlot = 7;
   */
  startSlot: bigint;

  /**
   * The final slot of the epoch
   *
   * @generated from field: uint64 endSlot = 8;
   */
  endSlot: bigint;

  /**
   * The timestamp of the epoch start
   *
   * @generated from field: uint64 startTimestamp = 9;
   */
  startTimestamp: bigint;

  /**
   * The timestamp of the epoch end
   *
   * @generated from field: uint64 endTimestamp = 10;
   */
  endTimestamp: bigint;

  /**
   * The total number of transactions in this epoch
   *
   * @generated from field: uint64 transactionCount = 11;
   */
  transactionCount: bigint;

  /**
   * The sum of all transaction rewards in the epoch
   *
   * @generated from field: quivr.models.Int128 totalTransactionReward = 12;
   */
  totalTransactionReward?: Int128;

  /**
   * The sum of all stake that is registered for the epoch
   *
   * @generated from field: quivr.models.Int128 activeStake = 13;
   */
  activeStake?: Int128;

  /**
   * The sum of all stake that is not registered for the epoch
   *
   * @generated from field: quivr.models.Int128 inactiveStake = 14;
   */
  inactiveStake?: Int128;

  /**
   * The sum total number of bytes of headers and transactions for the epoch
   *
   * @generated from field: uint64 dataBytes = 15;
   */
  dataBytes: bigint;

  constructor(data?: PartialMessage<EpochData>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.proto.node.EpochData";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EpochData;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EpochData;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EpochData;

  static equals(a: EpochData | PlainMessage<EpochData> | undefined, b: EpochData | PlainMessage<EpochData> | undefined): boolean;
}


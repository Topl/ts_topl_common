// @generated by protoc-gen-es v1.8.0
// @generated from file node/models/node_config.proto (package co.topl.proto.node, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Contains the configurations of the node over time
 *
 * @generated from message co.topl.proto.node.NodeConfig
 */
export declare class NodeConfig extends Message<NodeConfig> {
  /**
   * Slot number
   *
   * @generated from field: uint64 slot = 1;
   */
  slot: bigint;

  /**
   * Configured slot duration
   *
   * @generated from field: uint64 slotDurationMillis = 2;
   */
  slotDurationMillis: bigint;

  /**
   * Node computed epochLength
   *
   * @generated from field: uint64 epochLength = 3;
   */
  epochLength: bigint;

  constructor(data?: PartialMessage<NodeConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "co.topl.proto.node.NodeConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NodeConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NodeConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NodeConfig;

  static equals(a: NodeConfig | PlainMessage<NodeConfig> | undefined, b: NodeConfig | PlainMessage<NodeConfig> | undefined): boolean;
}


// @generated by protoc-gen-es v1.8.0
// @generated from file node/services/bifrost_rpc.proto (package co.topl.node.services, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, UInt64Value } from "@bufbuild/protobuf";
import { IoTransaction } from "../../brambl/models/transaction/io_transaction_pb.js";
import { TransactionId } from "../../brambl/models/identifier_pb.js";
import { BlockId } from "../../consensus/models/block_id_pb.js";
import { BlockHeader } from "../../consensus/models/block_header_pb.js";
import { BlockBody } from "../models/block_pb.js";
import { NodeConfig } from "../models/node_config_pb.js";
import { EpochData } from "../models/node_epochData_pb.js";

/**
 * Request type for BroadcastTransaction
 *
 * @generated from message co.topl.node.services.BroadcastTransactionReq
 */
export const BroadcastTransactionReq = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.BroadcastTransactionReq",
  () => [
    { no: 1, name: "transaction", kind: "message", T: IoTransaction },
  ],
);

/**
 * Response type for BroadcastTransaction
 *
 * @generated from message co.topl.node.services.BroadcastTransactionRes
 */
export const BroadcastTransactionRes = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.BroadcastTransactionRes",
  [],
);

/**
 * Request type for CurrentMempool
 *
 * @generated from message co.topl.node.services.CurrentMempoolReq
 */
export const CurrentMempoolReq = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.CurrentMempoolReq",
  [],
);

/**
 * Response type for CurrentMempool
 *
 * @generated from message co.topl.node.services.CurrentMempoolRes
 */
export const CurrentMempoolRes = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.CurrentMempoolRes",
  () => [
    { no: 1, name: "transactionIds", kind: "message", T: TransactionId, repeated: true },
  ],
);

/**
 * Request type for CurrentMempoolContainsReq
 *
 * @generated from message co.topl.node.services.CurrentMempoolContainsReq
 */
export const CurrentMempoolContainsReq = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.CurrentMempoolContainsReq",
  () => [
    { no: 1, name: "transactionId", kind: "message", T: TransactionId },
  ],
);

/**
 * Response type for CurrentMempoolContainsRes
 *
 * @generated from message co.topl.node.services.CurrentMempoolContainsRes
 */
export const CurrentMempoolContainsRes = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.CurrentMempoolContainsRes",
  () => [
    { no: 1, name: "inMempool", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * Request type for FetchBlockHeader
 *
 * @generated from message co.topl.node.services.FetchBlockHeaderReq
 */
export const FetchBlockHeaderReq = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.FetchBlockHeaderReq",
  () => [
    { no: 1, name: "blockId", kind: "message", T: BlockId },
  ],
);

/**
 * Response type for FetchBlockHeader
 *
 * @generated from message co.topl.node.services.FetchBlockHeaderRes
 */
export const FetchBlockHeaderRes = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.FetchBlockHeaderRes",
  () => [
    { no: 1, name: "header", kind: "message", T: BlockHeader },
  ],
);

/**
 * Request type for FetchBlockBody
 *
 * @generated from message co.topl.node.services.FetchBlockBodyReq
 */
export const FetchBlockBodyReq = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.FetchBlockBodyReq",
  () => [
    { no: 1, name: "blockId", kind: "message", T: BlockId },
  ],
);

/**
 * Response type for FetchBlockBody
 *
 * @generated from message co.topl.node.services.FetchBlockBodyRes
 */
export const FetchBlockBodyRes = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.FetchBlockBodyRes",
  () => [
    { no: 1, name: "body", kind: "message", T: BlockBody },
  ],
);

/**
 * Request type for FetchTransaction
 *
 * @generated from message co.topl.node.services.FetchTransactionReq
 */
export const FetchTransactionReq = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.FetchTransactionReq",
  () => [
    { no: 1, name: "transactionId", kind: "message", T: TransactionId },
  ],
);

/**
 * Response type for FetchTransaction
 *
 * @generated from message co.topl.node.services.FetchTransactionRes
 */
export const FetchTransactionRes = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.FetchTransactionRes",
  () => [
    { no: 1, name: "transaction", kind: "message", T: IoTransaction },
  ],
);

/**
 * Request type for FetchBlockIdAtHeight
 *
 * @generated from message co.topl.node.services.FetchBlockIdAtHeightReq
 */
export const FetchBlockIdAtHeightReq = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.FetchBlockIdAtHeightReq",
  () => [
    { no: 1, name: "height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * Response type for FetchBlockIdAtHeight
 *
 * @generated from message co.topl.node.services.FetchBlockIdAtHeightRes
 */
export const FetchBlockIdAtHeightRes = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.FetchBlockIdAtHeightRes",
  () => [
    { no: 1, name: "blockId", kind: "message", T: BlockId },
  ],
);

/**
 * Request type for FetchBlockIdAtDepth
 *
 * @generated from message co.topl.node.services.FetchBlockIdAtDepthReq
 */
export const FetchBlockIdAtDepthReq = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.FetchBlockIdAtDepthReq",
  () => [
    { no: 1, name: "depth", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * Response type for FetchBlockIdAtDepth
 *
 * @generated from message co.topl.node.services.FetchBlockIdAtDepthRes
 */
export const FetchBlockIdAtDepthRes = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.FetchBlockIdAtDepthRes",
  () => [
    { no: 1, name: "blockId", kind: "message", T: BlockId },
  ],
);

/**
 * Request type for SynchronizationTraversal
 *
 * @generated from message co.topl.node.services.SynchronizationTraversalReq
 */
export const SynchronizationTraversalReq = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.SynchronizationTraversalReq",
  [],
);

/**
 * Response type for SynchronizationTraversal
 *
 * @generated from message co.topl.node.services.SynchronizationTraversalRes
 */
export const SynchronizationTraversalRes = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.SynchronizationTraversalRes",
  () => [
    { no: 1, name: "applied", kind: "message", T: BlockId, oneof: "status" },
    { no: 2, name: "unapplied", kind: "message", T: BlockId, oneof: "status" },
  ],
);

/**
 * Request type for FetchNodeConfigReq
 *
 * @generated from message co.topl.node.services.FetchNodeConfigReq
 */
export const FetchNodeConfigReq = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.FetchNodeConfigReq",
  [],
);

/**
 * Response type for FetchNodeConfigRes
 *
 * @generated from message co.topl.node.services.FetchNodeConfigRes
 */
export const FetchNodeConfigRes = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.FetchNodeConfigRes",
  () => [
    { no: 1, name: "config", kind: "message", T: NodeConfig },
  ],
);

/**
 * Request type for FetchEpochDataReq
 *
 * @generated from message co.topl.node.services.FetchEpochDataReq
 */
export const FetchEpochDataReq = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.FetchEpochDataReq",
  () => [
    { no: 1, name: "epoch", kind: "message", T: UInt64Value },
  ],
);

/**
 * Response type for FetchEpochDataRes
 *
 * @generated from message co.topl.node.services.FetchEpochDataRes
 */
export const FetchEpochDataRes = /*@__PURE__*/ proto3.makeMessageType(
  "co.topl.node.services.FetchEpochDataRes",
  () => [
    { no: 1, name: "epochData", kind: "message", T: EpochData },
  ],
);

